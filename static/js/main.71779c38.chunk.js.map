{"version":3,"sources":["components/Header.jsx","functions/getIp.js","components/Map.js","components/SectionMap.jsx","components/Main.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["props","_","a","axios","get","response","data","console","log","Map","target","layers","TileLayer","source","XYZ","url","view","View","center","fromLonLat","lon","lat","zoom","controls","defaults","attribution","rotate","useState","ip","ipReverso","cidade","estado","pais","provedora","state","setState","setInfos","getIp","infos","region","split","reverse","city","country","isp","longitude","latitude","Mapa","useEffect","className","id","href","Header","SectionMap","Main","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEe,WAAAA,GACX,OACI,iCAAQ,8C,0DCDhB,yCAAe,WAAMC,GAAN,eAAAC,EAAA,4DACC,4BADD,kBAIeC,IAAMC,IAHpB,6BADD,cAIFC,EAJE,yBAKAA,EAASC,MALT,gCAOPC,QAAQC,IAAR,MAPO,yDAAf,sD,+CCMe,WAAAR,GACX,OAAO,IAAIS,IAAI,CACXC,OAAQ,MACRC,OAAQ,CACN,IAAIC,IAAU,CACZC,OAAQ,IAAIC,IAAI,CACdC,IAAK,+DAIXC,KAAM,IAAIC,IAAK,CACbC,OAAQC,YAAW,CAACnB,EAAMoB,IAAKpB,EAAMqB,MACrCC,KAAM,KAERC,SAAUC,YAAS,CACfC,aAAa,EACbH,MAAM,EACNI,QAAQ,OCXL,WAAA1B,GACX,MAA0B2B,mBAAS,CAC/BC,GAAI,MACJC,UAAW,MACXC,OAAQ,MACRC,OAAQ,MACRC,KAAM,MACNC,UAAW,MACXb,IAAK,MACLC,IAAK,QART,mBAAOa,EAAP,KAAcC,EAAd,KAWMC,EAAQ,uCAAG,8BAAAlC,EAAA,sEACOmC,IADP,OACPC,EADO,OAEPP,EAASO,EAAMC,OAAOC,MAAM,KAAK,GAEvCL,EAAS,CACLP,GAAIU,EAAMV,GACVC,UAAWS,EAAMG,QACjBX,OAAQQ,EAAMI,KACdX,OAAQA,EACRC,KAAMM,EAAMK,QACZV,UAAWK,EAAMM,IACjBxB,IAAKkB,EAAMO,UACXxB,IAAKiB,EAAMQ,WAEfC,EAAK,CAAC3B,IAAKkB,EAAMO,UAAWxB,IAAKiB,EAAMQ,WAd1B,2CAAH,qDAsBd,OAJAE,qBAAU,WACNZ,MACD,IAGC,yBAASa,UAAU,WAAnB,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKC,GAAG,MAAMD,UAAU,gBAAxB,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,cAIvB,sBAAKA,UAAU,OAAf,UACI,gCAAK,iDAAuB,sBAAMA,UAAU,QAAhB,SAAyBf,EAAMN,QAC3D,gCAAK,4CAAqB,sBAAMqB,UAAU,QAAhB,SAAyBf,EAAMJ,YACzD,gCAAK,4CAAqB,sBAAMmB,UAAU,QAAhB,SAAyBf,EAAMH,YACzD,gCAAK,6CAAmB,sBAAMkB,UAAU,QAAhB,SAAyBf,EAAMF,UACvD,gCAAK,8CAAuB,sBAAMiB,UAAU,QAAhB,SAAyBf,EAAMb,SAC3D,gCAAK,+CAAwB,sBAAM4B,UAAU,QAAhB,SAAyBf,EAAMd,SAC5D,gCAAK,+CAAwB,sBAAM6B,UAAU,QAAhB,SAAyBf,EAAMD,wBC/DjE,G,OAAA,SAAAjC,GACX,OACI,iCACI,qDACA,8BAAG,wCAAH,oDAAoE,gMAApE,kUACA,4BCLG,G,OAAA,SAAAA,GACX,OACI,iCACI,8CAAgB,mBAAGU,OAAO,SAASyC,KAAK,sCAAxB,8BCEb,WAAAnD,GACb,OACE,qCACE,cAACoD,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,QCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.71779c38.chunk.js","sourcesContent":["import './styles/header.css'\n\nexport default props => {\n    return (\n        <header><h1>Meu IP-v4</h1></header>\n    )\n}","import axios from 'axios'\n\n\nexport default async _ => {\n    const url = 'https://ipwhois.app/json/'\n\n    try {\n       const response = await axios.get(url)\n        return response.data\n    } catch (error) {\n        console.log(error)\n    }\n}","import Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\n\nimport { defaults } from 'ol/control'\nimport {fromLonLat} from 'ol/proj';\n\n\nexport default props => {\n    return new Map({\n        target: 'map',\n        layers: [\n          new TileLayer({\n            source: new XYZ({\n              url: 'http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}',\n            })\n          })\n        ],\n        view: new View({\n          center: fromLonLat([props.lon, props.lat]),\n          zoom: 14\n        }),\n        controls: defaults({\n            attribution: false,\n            zoom: false,\n            rotate: false\n        })\n    })\n}","import './styles/sectionMap.css'\nimport { useEffect, useState } from 'react'\nimport getIp from '../functions/getIp'\nimport Mapa from './Map'\n\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\n\nimport { defaults } from 'ol/control'\nimport {fromLonLat} from 'ol/proj';\n\n\n\nexport default props => {\n    const [state, setState] = useState({\n        ip: 'n/a',\n        ipReverso: 'n/a',\n        cidade: 'n/a',\n        estado: 'n/a',\n        pais: 'n/a',\n        provedora: 'n/a',\n        lon: 'n/a',\n        lat: 'n/a'\n    })\n\n    const setInfos = async () => {\n        const infos = await getIp()\n        const estado = infos.region.split(' ')[2]\n\n        setState({\n            ip: infos.ip,\n            ipReverso: infos.reverse,\n            cidade: infos.city,\n            estado: estado,\n            pais: infos.country,\n            provedora: infos.isp,\n            lon: infos.longitude,\n            lat: infos.latitude\n        })\n        Mapa({lon: infos.longitude, lat: infos.latitude})\n    }\n\n\n    useEffect(() => {\n        setInfos()\n    }, [])\n\n    return (\n        <section className=\"map-info\">\n            <div className=\"shadow\">\n                <div id=\"map\" className=\"map-container\">\n                    <div className=\"pelicula\">\n                        <div className=\"pingo\"></div>\n                    </div>\n                </div>\n\n                <div className=\"info\">\n                    <div><span>Seu IP é: </span><span className=\"campo\">{state.ip}</span></div>\n                    <div><span>Cidade: </span><span className=\"campo\">{state.cidade}</span></div>\n                    <div><span>Estado: </span><span className=\"campo\">{state.estado}</span></div>\n                    <div><span>País: </span><span className=\"campo\">{state.pais}</span></div>\n                    <div><span>Latitude: </span><span className=\"campo\">{state.lat}</span></div>\n                    <div><span>Longitude: </span><span className=\"campo\">{state.lon}</span></div>\n                    <div><span>Provedora: </span><span className=\"campo\">{state.provedora}</span></div>\n                </div>\n            </div>\n        </section>\n    )\n}","import './styles/main.css'\n\nexport default props => {\n    return (\n        <main>\n            <h2>O que é o meu ip</h2>\n            <p><strong>IP</strong> significa endereço do Protocolo de Internet. <strong>Um endereço IP é uma série exclusiva de números e letras atribuída a cada dispositivo conectado a uma rede de computadores, como a Internet</strong>. Esse rótulo identifica e diferencia os bilhões de dispositivos que usam a Internet, incluindo computadores, celulares, impressoras e um número crescente de dispositivos chamados de Internet das Coisas (IoT), como alto-falantes, geladeiras, sistemas de vigilância doméstica inteligentes e muito mais.</p>\n            <hr/>\n        </main>\n    )\n}","import './styles/footer.css'\n\nexport default props => {\n    return (\n        <footer>\n            <p>Developed by <a target=\"_blank\" href=\"https://www.instagram.com/bergue69/\">@bergue69</a></p>\n        </footer>\n    )\n}","import './App.css';\nimport Header from './components/Header'\nimport SectionMap from './components/SectionMap'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\n\nexport default props => {\n  return (\n    <>\n      <Header />\n      <SectionMap />\n      <Main />\n      <Footer />\n    </>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}